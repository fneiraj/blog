---
import { type CollectionEntry, getCollection } from "astro:content";
import PostDetails from "@layouts/PostDetails.astro";
import { getRelatedPosts } from "@utils/getRelatedPosts";

export interface Props {
  post: CollectionEntry<"blog">;
  prevPost: CollectionEntry<"blog">;
  nextPost: CollectionEntry<"blog">;
  relatedPosts: CollectionEntry<"blog">[];
}

export async function getStaticPaths() {
  const posts = await getCollection("blog", ({ data }) => !data.draft);

  const numberOfPosts = posts.length;

  const postResult = posts.map((post, i) => ({
    params: { slug: post.slug },
    props: {
      post,
      prevPost: i + 1 === numberOfPosts ? undefined : posts[i + 1],
      nextPost: i === 0 ? undefined : posts[i - 1],
      relatedPosts: getRelatedPosts(posts, post),
    },
  }));

  return [...postResult];
}

const fetchPostInfo = async () => {
  const slug = Astro.params.slug;

  fetch(`/api/posts/${slug}`)
    .then((res) => res.json())
    .then((data) => {
      console.log(data);
    });
};

fetchPostInfo();

const { post, prevPost, nextPost, relatedPosts } = Astro.props;
---

<PostDetails {post} {prevPost} {nextPost} {relatedPosts} />
