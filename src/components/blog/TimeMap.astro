---
import type { CollectionEntry } from "astro:content";
import Divider from "@components/posts/Divider.astro";
import { slugifyStr } from "@utils/slugify";
import { getPostsTimeMap } from "@utils/getPostTimeMap";

const { posts } = Astro.props;

const timeMap: Map<
  string,
  Map<string, Array<CollectionEntry<"blog">>>
> = getPostsTimeMap(posts);
---

{
  Array.from(timeMap.keys()).map((year) => {
    return (
      <div>
        <Divider>{year}</Divider>
        <ol class="relative ml-3 border-l border-gray-200 dark:border-gray-700">
          {Array.from(timeMap.get(year)?.keys() ?? []).map((month) => (
            <li class="mb-10 ml-6">
              <span class="bg-hans-100 dark:ring-dark absolute -left-3 flex h-6 w-6 items-center justify-center rounded-full ring-8 ">
                <svg
                  aria-hidden="true"
                  class="text-hans-200 h-3 w-3"
                  fill="currentColor"
                  viewBox="0 0 20 20"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    fill-rule="evenodd"
                    d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z"
                    clip-rule="evenodd"
                  />
                </svg>
              </span>
              <h3 class="mb-1 flex items-center text-lg font-semibold text-gray-700 dark:text-gray-300">
                {month}
              </h3>
              <div>
                {timeMap
                  .get(year)
                  ?.get(month)
                  ?.map((post) => {
                    const postDate = new Date(post.data.pubDatetime);
                    const year = postDate.getFullYear();
                    const month = String(postDate.getMonth() + 1).padStart(
                      2,
                      "0",
                    );
                    const day = String(postDate.getDate()).padStart(2, "0");
                    const formattedDate = `${day}-${month}-${year}`;
                    return (
                      <div class="text-lg font-bold">
                        <span
                          class={
                            "mr-3 text-gray-300 dark:text-opacity-50 tabular-nums"
                          }
                        >
                          {formattedDate}
                        </span>
                        <a href={`/posts/${post.slug}`}>
                          <span
                            transition:name={slugifyStr(post.data.title)}
                            class={
                              "text-hans-100 hover:text-hans-200 hover:text-primary-500 dark:text-opacity-80"
                            }
                          >
                            {post.data.title}
                          </span>
                        </a>
                      </div>
                    );
                  })}
              </div>
            </li>
          ))}
        </ol>
      </div>
    );
  })
}
